{"remainingRequest":"C:\\Projects\\DA\\front_backend\\vue-js-client-crud\\node_modules\\babel-loader\\lib\\index.js!C:\\Projects\\DA\\front_backend\\vue-js-client-crud\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Projects\\DA\\front_backend\\vue-js-client-crud\\src\\services\\GenericRESTDataService.js","dependencies":[{"path":"C:\\Projects\\DA\\front_backend\\vue-js-client-crud\\src\\services\\GenericRESTDataService.js","mtime":1624024884855},{"path":"C:\\Projects\\DA\\front_backend\\vue-js-client-crud\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1622097486799},{"path":"C:\\Projects\\DA\\front_backend\\vue-js-client-crud\\node_modules\\babel-loader\\lib\\index.js","mtime":1622097486417},{"path":"C:\\Projects\\DA\\front_backend\\vue-js-client-crud\\node_modules\\eslint-loader\\index.js","mtime":1622097493014}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9zbGljZWRUb0FycmF5IGZyb20gIkM6L1Byb2plY3RzL0RBL2Zyb250X2JhY2tlbmQvdnVlLWpzLWNsaWVudC1jcnVkL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9zbGljZWRUb0FycmF5IjsKaW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIkM6L1Byb2plY3RzL0RBL2Zyb250X2JhY2tlbmQvdnVlLWpzLWNsaWVudC1jcnVkL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKaW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tICJDOi9Qcm9qZWN0cy9EQS9mcm9udF9iYWNrZW5kL3Z1ZS1qcy1jbGllbnQtY3J1ZC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY2xhc3NDYWxsQ2hlY2siOwppbXBvcnQgX2NyZWF0ZUNsYXNzIGZyb20gIkM6L1Byb2plY3RzL0RBL2Zyb250X2JhY2tlbmQvdnVlLWpzLWNsaWVudC1jcnVkL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jcmVhdGVDbGFzcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuZm9yLWVhY2guanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QuZW50cmllcy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmluY2x1ZGVzLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLmluY2x1ZGVzLmpzIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiOwovL2ltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7CmltcG9ydCBodHRwIGZyb20gJy4uL2h0dHAtY29tbW9uJzsgLy9pbXBvcnQgY29uZmlnIGZyb20gcHJvY2Vzcy5lbnYuVlVFX0FQUF9FWFRfUkVTVF9DT05GSUdfMV9kb3RzOyAvLyIuL2NvbmZpZyI7CgppbXBvcnQgY29uZmlnIGZyb20gJy4uL2NvbmZpZyc7Cgp2YXIgR2VuZXJpY1JFU1REYXRhU2VydmljZSA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoKSB7CiAgZnVuY3Rpb24gR2VuZXJpY1JFU1REYXRhU2VydmljZSgpIHsKICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBHZW5lcmljUkVTVERhdGFTZXJ2aWNlKTsKICB9CgogIF9jcmVhdGVDbGFzcyhHZW5lcmljUkVTVERhdGFTZXJ2aWNlLCBbewogICAga2V5OiAiZ2V0QWxsIiwKICAgIHZhbHVlOiBmdW5jdGlvbiAoKSB7CiAgICAgIHZhciBfZ2V0QWxsID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICAgIHZhciByZXNwb25zZTsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMjsKICAgICAgICAgICAgICAgIHJldHVybiBodHRwLmdldCgnLycgKyBjb25maWcuUmVzc291cmNlTmFtZSk7CgogICAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICAgIHJlc3BvbnNlID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5hYnJ1cHQoInJldHVybiIsIHJlc3BvbnNlLmRhdGFbY29uZmlnLlJlc3NvdXJjZU5hbWVdKTsKCiAgICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZSk7CiAgICAgIH0pKTsKCiAgICAgIGZ1bmN0aW9uIGdldEFsbCgpIHsKICAgICAgICByZXR1cm4gX2dldEFsbC5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgICB9CgogICAgICByZXR1cm4gZ2V0QWxsOwogICAgfSgpCiAgfSwgewogICAga2V5OiAiZmluZEJ5SWQiLAogICAgdmFsdWU6IGZ1bmN0aW9uICgpIHsKICAgICAgdmFyIF9maW5kQnlJZCA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIoaWQpIHsKICAgICAgICB2YXIgcmVzcG9uc2UsIGF0dHJzLCBtYXBwZWQ7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUyJChfY29udGV4dDIpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQyLnByZXYgPSBfY29udGV4dDIubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gMjsKICAgICAgICAgICAgICAgIHJldHVybiBodHRwLmdldCgiL2Jvb2tzLyIuY29uY2F0KGlkKSk7CgogICAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICAgIHJlc3BvbnNlID0gX2NvbnRleHQyLnNlbnQ7CiAgICAgICAgICAgICAgICAvL2NvbnN0IHJlc3BvbnNlID0gYXdhaXQgaHR0cC5nZXQoJy9ib29rcy8xJyk7CgogICAgICAgICAgICAgICAgLyogcmV0dXJuIHJlc3BvbnNlLmRhdGEgKi8KCiAgICAgICAgICAgICAgICAvKiBjb25zb2xlLmxvZyhyZXNwb25zZS5kYXRhLmJvb2tbY29uZmlnLmF0dHJiaXV0ZXMudmFyaWFibGVfMF0pOw0KICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2cocmVzcG9uc2UuZGF0YS5ib29rW2NvbmZpZy5hdHRyYml1dGVzLnZhcmlhYmxlXzFdKTsqLwogICAgICAgICAgICAgICAgY29uc29sZS5sb2cocmVzcG9uc2UuZGF0YS5ib29rKTsKICAgICAgICAgICAgICAgIGF0dHJzID0gY29uZmlnLmF0dHJiaXV0ZXM7CiAgICAgICAgICAgICAgICAvKiBjb25zdCBtYXBwZWQgPSB7fTsNCiAgICAgICAgICAgICAgICBjb25zdCBvYmogPSByZXNwb25zZS5kYXRhLmJvb2s7DQogICAgICAgICAgICAgICAgbGV0IGNvdW50ZXIgPSAwOw0KICAgICAgICAgICAgICAgIE9iamVjdC5lbnRyaWVzKG9iaikuZm9yRWFjaCgoW2tleSwgdmFsdWVdKSA9PiB7DQogICAgICAgICAgICAgICAgICBpZiAoYXR0cnMuaW5jbHVkZXMoa2V5KSkgew0KICAgICAgICAgICAgICAgICAgICBtYXBwZWRbJ2pJdGVtXycgKyBjb3VudGVyXSA9IHZhbHVlOw0KICAgICAgICAgICAgICAgICAgICBjb3VudGVyKys7DQogICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfSk7ICovCgogICAgICAgICAgICAgICAgbWFwcGVkID0ge307CiAgICAgICAgICAgICAgICBPYmplY3QuZW50cmllcyhyZXNwb25zZS5kYXRhLmJvb2spLmZvckVhY2goZnVuY3Rpb24gKF9yZWYpIHsKICAgICAgICAgICAgICAgICAgdmFyIF9yZWYyID0gX3NsaWNlZFRvQXJyYXkoX3JlZiwgMiksCiAgICAgICAgICAgICAgICAgICAgICBrZXkgPSBfcmVmMlswXSwKICAgICAgICAgICAgICAgICAgICAgIHZhbHVlID0gX3JlZjJbMV07CgogICAgICAgICAgICAgICAgICBpZiAoYXR0cnMuaW5jbHVkZXMoa2V5KSkgewogICAgICAgICAgICAgICAgICAgIG1hcHBlZFtrZXldID0gdmFsdWU7CiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5hYnJ1cHQoInJldHVybiIsIFttYXBwZWRdKTsKCiAgICAgICAgICAgICAgY2FzZSA4OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUyKTsKICAgICAgfSkpOwoKICAgICAgZnVuY3Rpb24gZmluZEJ5SWQoX3gpIHsKICAgICAgICByZXR1cm4gX2ZpbmRCeUlkLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICAgIH0KCiAgICAgIHJldHVybiBmaW5kQnlJZDsKICAgIH0oKQogIH0sIHsKICAgIGtleTogImNyZWF0ZSIsCiAgICB2YWx1ZTogZnVuY3Rpb24gY3JlYXRlKGRhdGEpIHsKICAgICAgLyogZGF0YVtjb25maWcuYXR0cmliaXV0ZXNUZXN0LnZhcmlhYmxlXzFdID0gZGF0YS52YXJpYWJsZV8xOw0KICAgICAgZGF0YVtjb25maWcuYXR0cmliaXV0ZXNUZXN0LnZhcmlhYmxlXzJdID0gZGF0YS52YXJpYWJsZV8yOw0KICAgICAgZGF0YVtjb25maWcuYXR0cmliaXV0ZXNUZXN0LnZhcmlhYmxlXzNdID0gZGF0YS52YXJpYWJsZV8zOw0KICAgICAgZGF0YVtjb25maWcuYXR0cmliaXV0ZXNUZXN0LnZhcmlhYmxlXzRdID0gZGF0YS52YXJpYWJsZV80Ow0KICAgICAgZGF0YVtjb25maWcuYXR0cmliaXV0ZXNUZXN0LnZhcmlhYmxlXzVdID0gZGF0YS52YXJpYWJsZV81OyAqLwogICAgICByZXR1cm4gaHR0cC5wb3N0KCcvJyArIGNvbmZpZy5SZXNzb3VyY2VOYW1lLCBkYXRhKS50aGVuKGZ1bmN0aW9uIChyZXN1bHQpIHsKICAgICAgICByZXR1cm4gcmVzdWx0LmRhdGEuaWQ7CiAgICAgIH0pOyAvL3JldHVybiBodHRwLnBvc3QoIi9ib29rcyIsIGRhdGEpOwogICAgfQogIH0sIHsKICAgIGtleTogImdldCIsCiAgICB2YWx1ZTogZnVuY3Rpb24gKCkgewogICAgICB2YXIgX2dldCA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTMoaWQpIHsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTMkKF9jb250ZXh0MykgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDMucHJldiA9IF9jb250ZXh0My5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0My5hYnJ1cHQoInJldHVybiIsIGh0dHAuZ2V0KCIvYm9va3MvIi5jb25jYXQoaWQpKSk7CgogICAgICAgICAgICAgIGNhc2UgMToKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0My5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlMyk7CiAgICAgIH0pKTsKCiAgICAgIGZ1bmN0aW9uIGdldChfeDIpIHsKICAgICAgICByZXR1cm4gX2dldC5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgICB9CgogICAgICByZXR1cm4gZ2V0OwogICAgfSgpCiAgfSwgewogICAga2V5OiAidXBkYXRlIiwKICAgIHZhbHVlOiBmdW5jdGlvbiB1cGRhdGUoaWQsIGRhdGEpIHsKICAgICAgcmV0dXJuIGh0dHAucHV0KCIvYm9va3MvIi5jb25jYXQoaWQpLCBkYXRhKTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJkZWxldGUiLAogICAgdmFsdWU6IGZ1bmN0aW9uIF9kZWxldGUoaWQpIHsKICAgICAgcmV0dXJuIGh0dHAuZGVsZXRlKCIvYm9va3MvIi5jb25jYXQoaWQpKTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJkZWxldGVBbGwiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGRlbGV0ZUFsbCgpIHsKICAgICAgcmV0dXJuIGh0dHAuZGVsZXRlKCIvYm9va3MiKTsKICAgIH0KICB9XSk7CgogIHJldHVybiBHZW5lcmljUkVTVERhdGFTZXJ2aWNlOwp9KCk7CgpleHBvcnQgZGVmYXVsdCBuZXcgR2VuZXJpY1JFU1REYXRhU2VydmljZSgpOw=="},{"version":3,"sources":["C:/Projects/DA/front_backend/vue-js-client-crud/src/services/GenericRESTDataService.js"],"names":["http","config","GenericRESTDataService","get","RessourceName","response","data","id","console","log","book","attrs","attrbiutes","mapped","Object","entries","forEach","key","value","includes","post","then","result","put","delete"],"mappings":";;;;;;;;;AAAA;AACA,OAAOA,IAAP,MAAiB,gBAAjB,C,CACA;;AACA,OAAOC,MAAP,MAAmB,WAAnB;;IAEMC,sB;;;;;;;;4EACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACyBF,IAAI,CAACG,GAAL,CACrB,MAAMF,MAAM,CAACG,aADQ,CADzB;;AAAA;AACQC,gBAAAA,QADR;AAAA,iDAKSA,QAAQ,CAACC,IAAT,CAAcL,MAAM,CAACG,aAArB,CALT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;8EAQA,kBAAeG,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEyBP,IAAI,CAACG,GAAL,kBACXI,EADW,EAFzB;;AAAA;AAEQF,gBAAAA,QAFR;AAKE;;AAEA;;AACA;AACJ;AACIG,gBAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAQ,CAACC,IAAT,CAAcI,IAA1B;AACMC,gBAAAA,KAXR,GAWgBV,MAAM,CAACW,UAXvB;AAYE;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEUC,gBAAAA,MAtBR,GAsBiB,EAtBjB;AAuBEC,gBAAAA,MAAM,CAACC,OAAP,CAAeV,QAAQ,CAACC,IAAT,CAAcI,IAA7B,EAAmCM,OAAnC,CACE,gBAAkB;AAAA;AAAA,sBAAhBC,GAAgB;AAAA,sBAAXC,KAAW;;AAChB,sBAAIP,KAAK,CAACQ,QAAN,CAAeF,GAAf,CAAJ,EAAyB;AACvBJ,oBAAAA,MAAM,CAACI,GAAD,CAAN,GAAcC,KAAd;AACD;AACF,iBALH;AAvBF,kDA8BS,CAACL,MAAD,CA9BT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;WAiCA,gBAAOP,IAAP,EAAa;AACX;AACJ;AACA;AACA;AACA;AAEI,aAAON,IAAI,CACRoB,IADI,CACC,MAAMnB,MAAM,CAACG,aADd,EAC6BE,IAD7B,EAEJe,IAFI,CAEC,UAAAC,MAAM,EAAI;AACd,eAAOA,MAAM,CAAChB,IAAP,CAAYC,EAAnB;AACD,OAJI,CAAP,CAPW,CAYX;AACD;;;;yEAED,kBAAUA,EAAV;AAAA;AAAA;AAAA;AAAA;AAAA,kDACSP,IAAI,CAACG,GAAL,kBAAmBI,EAAnB,EADT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;WAIA,gBAAOA,EAAP,EAAWD,IAAX,EAAiB;AACf,aAAON,IAAI,CAACuB,GAAL,kBAAmBhB,EAAnB,GAAyBD,IAAzB,CAAP;AACD;;;WAED,iBAAOC,EAAP,EAAW;AACT,aAAOP,IAAI,CAACwB,MAAL,kBAAsBjB,EAAtB,EAAP;AACD;;;WAED,qBAAY;AACV,aAAOP,IAAI,CAACwB,MAAL,UAAP;AACD;;;;;;AAGH,eAAe,IAAItB,sBAAJ,EAAf","sourcesContent":["//import axios from 'axios';\r\nimport http from '../http-common';\r\n//import config from process.env.VUE_APP_EXT_REST_CONFIG_1_dots; //\"./config\";\r\nimport config from '../config';\r\n\r\nclass GenericRESTDataService {\r\n  async getAll() {\r\n    const response = await http.get(\r\n      '/' + config.RessourceName\r\n    );\r\n\r\n    return response.data[config.RessourceName];\r\n  }\r\n\r\n  async findById(id) {\r\n    //TODO:  maket the function \"Search by ID\" work.\r\n    const response = await http.get(\r\n      `/books/${id}`\r\n    );\r\n    //const response = await http.get('/books/1');\r\n\r\n    /* return response.data */\r\n    /* console.log(response.data.book[config.attrbiutes.variable_0]);\r\n      console.log(response.data.book[config.attrbiutes.variable_1]);*/\r\n    console.log(response.data.book);\r\n    const attrs = config.attrbiutes;\r\n    /* const mapped = {};\r\n    const obj = response.data.book;\r\n    let counter = 0;\r\n    Object.entries(obj).forEach(([key, value]) => {\r\n      if (attrs.includes(key)) {\r\n        mapped['jItem_' + counter] = value;\r\n        counter++;\r\n      }\r\n    }); */\r\n\r\n    const mapped = {};\r\n    Object.entries(response.data.book).forEach(\r\n      ([key, value]) => {\r\n        if (attrs.includes(key)) {\r\n          mapped[key] = value;\r\n        }\r\n      }\r\n    );\r\n    return [mapped];\r\n  }\r\n\r\n  create(data) {\r\n    /* data[config.attribiutesTest.variable_1] = data.variable_1;\r\n    data[config.attribiutesTest.variable_2] = data.variable_2;\r\n    data[config.attribiutesTest.variable_3] = data.variable_3;\r\n    data[config.attribiutesTest.variable_4] = data.variable_4;\r\n    data[config.attribiutesTest.variable_5] = data.variable_5; */\r\n\r\n    return http\r\n      .post('/' + config.RessourceName, data)\r\n      .then(result => {\r\n        return result.data.id;\r\n      });\r\n    //return http.post(\"/books\", data);\r\n  }\r\n\r\n  async get(id) {\r\n    return http.get(`/books/${id}`);\r\n  }\r\n\r\n  update(id, data) {\r\n    return http.put(`/books/${id}`, data);\r\n  }\r\n\r\n  delete(id) {\r\n    return http.delete(`/books/${id}`);\r\n  }\r\n\r\n  deleteAll() {\r\n    return http.delete(`/books`);\r\n  }\r\n}\r\n\r\nexport default new GenericRESTDataService();\r\n"]}]}