{"remainingRequest":"C:\\Projects\\DA\\front_backend\\vue-js-client-crud\\node_modules\\babel-loader\\lib\\index.js!C:\\Projects\\DA\\front_backend\\vue-js-client-crud\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Projects\\DA\\front_backend\\vue-js-client-crud\\src\\services\\GenericRESTDataService.js","dependencies":[{"path":"C:\\Projects\\DA\\front_backend\\vue-js-client-crud\\src\\services\\GenericRESTDataService.js","mtime":1622822104487},{"path":"C:\\Projects\\DA\\front_backend\\vue-js-client-crud\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1622097486799},{"path":"C:\\Projects\\DA\\front_backend\\vue-js-client-crud\\node_modules\\babel-loader\\lib\\index.js","mtime":1622097486417},{"path":"C:\\Projects\\DA\\front_backend\\vue-js-client-crud\\node_modules\\eslint-loader\\index.js","mtime":1622097493014}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9zbGljZWRUb0FycmF5IGZyb20gIkM6L1Byb2plY3RzL0RBL2Zyb250X2JhY2tlbmQvdnVlLWpzLWNsaWVudC1jcnVkL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9zbGljZWRUb0FycmF5IjsKaW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIkM6L1Byb2plY3RzL0RBL2Zyb250X2JhY2tlbmQvdnVlLWpzLWNsaWVudC1jcnVkL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKaW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tICJDOi9Qcm9qZWN0cy9EQS9mcm9udF9iYWNrZW5kL3Z1ZS1qcy1jbGllbnQtY3J1ZC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY2xhc3NDYWxsQ2hlY2siOwppbXBvcnQgX2NyZWF0ZUNsYXNzIGZyb20gIkM6L1Byb2plY3RzL0RBL2Zyb250X2JhY2tlbmQvdnVlLWpzLWNsaWVudC1jcnVkL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jcmVhdGVDbGFzcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuZm9yLWVhY2guanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QuZW50cmllcy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmluY2x1ZGVzLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLmluY2x1ZGVzLmpzIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiOwovL2ltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7CmltcG9ydCBodHRwIGZyb20gJy4uL2h0dHAtY29tbW9uJzsgLy9pbXBvcnQgY29uZmlnIGZyb20gcHJvY2Vzcy5lbnYuVlVFX0FQUF9FWFRfUkVTVF9DT05GSUdfMV9kb3RzOyAvLyIuL2NvbmZpZyI7CgppbXBvcnQgY29uZmlnIGZyb20gJy4uL2NvbmZpZyc7Cgp2YXIgR2VuZXJpY1JFU1REYXRhU2VydmljZSA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoKSB7CiAgZnVuY3Rpb24gR2VuZXJpY1JFU1REYXRhU2VydmljZSgpIHsKICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBHZW5lcmljUkVTVERhdGFTZXJ2aWNlKTsKICB9CgogIF9jcmVhdGVDbGFzcyhHZW5lcmljUkVTVERhdGFTZXJ2aWNlLCBbewogICAga2V5OiAiZ2V0QWxsIiwKICAgIHZhbHVlOiBmdW5jdGlvbiAoKSB7CiAgICAgIHZhciBfZ2V0QWxsID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICAgIHZhciByZXNwb25zZTsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMjsKICAgICAgICAgICAgICAgIHJldHVybiBodHRwLmdldCgnLycgKyBjb25maWcuUmVzc291cmNlTmFtZSk7CgogICAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICAgIHJlc3BvbnNlID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5hYnJ1cHQoInJldHVybiIsIHJlc3BvbnNlLmRhdGFbY29uZmlnLlJlc3NvdXJjZU5hbWVdKTsKCiAgICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZSk7CiAgICAgIH0pKTsKCiAgICAgIGZ1bmN0aW9uIGdldEFsbCgpIHsKICAgICAgICByZXR1cm4gX2dldEFsbC5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgICB9CgogICAgICByZXR1cm4gZ2V0QWxsOwogICAgfSgpCiAgfSwgewogICAga2V5OiAiZmluZEJ5SWQiLAogICAgdmFsdWU6IGZ1bmN0aW9uICgpIHsKICAgICAgdmFyIF9maW5kQnlJZCA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIoaWQpIHsKICAgICAgICB2YXIgcmVzcG9uc2UsIGF0dHJzLCBtYXBwZWQ7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUyJChfY29udGV4dDIpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQyLnByZXYgPSBfY29udGV4dDIubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gMjsKICAgICAgICAgICAgICAgIHJldHVybiBodHRwLmdldCgiL2Jvb2tzLyIuY29uY2F0KGlkKSk7CgogICAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICAgIHJlc3BvbnNlID0gX2NvbnRleHQyLnNlbnQ7CiAgICAgICAgICAgICAgICAvL2NvbnN0IHJlc3BvbnNlID0gYXdhaXQgaHR0cC5nZXQoJy9ib29rcy8xJyk7CgogICAgICAgICAgICAgICAgLyogcmV0dXJuIHJlc3BvbnNlLmRhdGEgKi8KCiAgICAgICAgICAgICAgICAvKiBjb25zb2xlLmxvZyhyZXNwb25zZS5kYXRhLmJvb2tbY29uZmlnLmF0dHJiaXV0ZXMudmFyaWFibGVfMF0pOw0KICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2cocmVzcG9uc2UuZGF0YS5ib29rW2NvbmZpZy5hdHRyYml1dGVzLnZhcmlhYmxlXzFdKTsqLwogICAgICAgICAgICAgICAgY29uc29sZS5sb2cocmVzcG9uc2UuZGF0YS5ib29rKTsKICAgICAgICAgICAgICAgIGF0dHJzID0gY29uZmlnLmF0dHJiaXV0ZXM7CiAgICAgICAgICAgICAgICAvKiBjb25zdCBtYXBwZWQgPSB7fTsNCiAgICAgICAgICAgICAgICBjb25zdCBvYmogPSByZXNwb25zZS5kYXRhLmJvb2s7DQogICAgICAgICAgICAgICAgbGV0IGNvdW50ZXIgPSAwOw0KICAgICAgICAgICAgICAgIE9iamVjdC5lbnRyaWVzKG9iaikuZm9yRWFjaCgoW2tleSwgdmFsdWVdKSA9PiB7DQogICAgICAgICAgICAgICAgICBpZiAoYXR0cnMuaW5jbHVkZXMoa2V5KSkgew0KICAgICAgICAgICAgICAgICAgICBtYXBwZWRbJ2pJdGVtXycgKyBjb3VudGVyXSA9IHZhbHVlOw0KICAgICAgICAgICAgICAgICAgICBjb3VudGVyKys7DQogICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfSk7ICovCgogICAgICAgICAgICAgICAgbWFwcGVkID0ge307CiAgICAgICAgICAgICAgICBPYmplY3QuZW50cmllcyhyZXNwb25zZS5kYXRhLmJvb2spLmZvckVhY2goZnVuY3Rpb24gKF9yZWYpIHsKICAgICAgICAgICAgICAgICAgdmFyIF9yZWYyID0gX3NsaWNlZFRvQXJyYXkoX3JlZiwgMiksCiAgICAgICAgICAgICAgICAgICAgICBrZXkgPSBfcmVmMlswXSwKICAgICAgICAgICAgICAgICAgICAgIHZhbHVlID0gX3JlZjJbMV07CgogICAgICAgICAgICAgICAgICBpZiAoYXR0cnMuaW5jbHVkZXMoa2V5KSkgewogICAgICAgICAgICAgICAgICAgIG1hcHBlZFtrZXldID0gdmFsdWU7CiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5hYnJ1cHQoInJldHVybiIsIFttYXBwZWRdKTsKCiAgICAgICAgICAgICAgY2FzZSA4OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUyKTsKICAgICAgfSkpOwoKICAgICAgZnVuY3Rpb24gZmluZEJ5SWQoX3gpIHsKICAgICAgICByZXR1cm4gX2ZpbmRCeUlkLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICAgIH0KCiAgICAgIHJldHVybiBmaW5kQnlJZDsKICAgIH0oKQogIH0sIHsKICAgIGtleTogImNyZWF0ZSIsCiAgICB2YWx1ZTogZnVuY3Rpb24gY3JlYXRlKGRhdGEpIHsKICAgICAgZGF0YVtjb25maWcuYXR0cmliaXV0ZXNUZXN0LnZhcmlhYmxlXzFdID0gZGF0YS52YXJpYWJsZV8xOwogICAgICBkYXRhW2NvbmZpZy5hdHRyaWJpdXRlc1Rlc3QudmFyaWFibGVfMl0gPSBkYXRhLnZhcmlhYmxlXzI7CiAgICAgIGRhdGFbY29uZmlnLmF0dHJpYml1dGVzVGVzdC52YXJpYWJsZV8zXSA9IGRhdGEudmFyaWFibGVfMzsKICAgICAgZGF0YVtjb25maWcuYXR0cmliaXV0ZXNUZXN0LnZhcmlhYmxlXzRdID0gZGF0YS52YXJpYWJsZV80OwogICAgICBkYXRhW2NvbmZpZy5hdHRyaWJpdXRlc1Rlc3QudmFyaWFibGVfNV0gPSBkYXRhLnZhcmlhYmxlXzU7CiAgICAgIHJldHVybiBodHRwLnBvc3QoJy8nICsgY29uZmlnLlJlc3NvdXJjZU5hbWUsIGRhdGEpLnRoZW4oZnVuY3Rpb24gKHJlc3VsdCkgewogICAgICAgIHJldHVybiByZXN1bHQuZGF0YVtjb25maWcuYXR0cmliaXV0ZXNUZXN0LnZhcmlhYmxlXzBdOwogICAgICB9KTsgLy9yZXR1cm4gaHR0cC5wb3N0KCIvYm9va3MiLCBkYXRhKTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJnZXQiLAogICAgdmFsdWU6IGZ1bmN0aW9uICgpIHsKICAgICAgdmFyIF9nZXQgPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUzKGlkKSB7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUzJChfY29udGV4dDMpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQzLnByZXYgPSBfY29udGV4dDMubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDMuYWJydXB0KCJyZXR1cm4iLCBodHRwLmdldCgiL2Jvb2tzLyIuY29uY2F0KGlkKSkpOwoKICAgICAgICAgICAgICBjYXNlIDE6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDMuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTMpOwogICAgICB9KSk7CgogICAgICBmdW5jdGlvbiBnZXQoX3gyKSB7CiAgICAgICAgcmV0dXJuIF9nZXQuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgICAgfQoKICAgICAgcmV0dXJuIGdldDsKICAgIH0oKQogIH0sIHsKICAgIGtleTogInVwZGF0ZSIsCiAgICB2YWx1ZTogZnVuY3Rpb24gdXBkYXRlKGlkLCBkYXRhKSB7CiAgICAgIHJldHVybiBodHRwLnB1dCgiL2Jvb2tzLyIuY29uY2F0KGlkKSwgZGF0YSk7CiAgICB9CiAgfSwgewogICAga2V5OiAiZGVsZXRlIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBfZGVsZXRlKGlkKSB7CiAgICAgIHJldHVybiBodHRwLmRlbGV0ZSgiL2Jvb2tzLyIuY29uY2F0KGlkKSk7CiAgICB9CiAgfSwgewogICAga2V5OiAiZGVsZXRlQWxsIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBkZWxldGVBbGwoKSB7CiAgICAgIHJldHVybiBodHRwLmRlbGV0ZSgiL2Jvb2tzIik7CiAgICB9CiAgfV0pOwoKICByZXR1cm4gR2VuZXJpY1JFU1REYXRhU2VydmljZTsKfSgpOwoKZXhwb3J0IGRlZmF1bHQgbmV3IEdlbmVyaWNSRVNURGF0YVNlcnZpY2UoKTs="},{"version":3,"sources":["C:/Projects/DA/front_backend/vue-js-client-crud/src/services/GenericRESTDataService.js"],"names":["http","config","GenericRESTDataService","get","RessourceName","response","data","id","console","log","book","attrs","attrbiutes","mapped","Object","entries","forEach","key","value","includes","attribiutesTest","variable_1","variable_2","variable_3","variable_4","variable_5","post","then","result","variable_0","put","delete"],"mappings":"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","sourcesContent":["//import axios from 'axios';\r\nimport http from '../http-common';\r\n//import config from process.env.VUE_APP_EXT_REST_CONFIG_1_dots; //\"./config\";\r\nimport config from '../config';\r\n\r\nclass GenericRESTDataService {\r\n  async getAll() {\r\n    const response = await http.get('/' + config.RessourceName);\r\n\r\n    return response.data[config.RessourceName];\r\n  }\r\n\r\n  async findById(id) {\r\n    //TODO:  maket the function \"Search by ID\" work.\r\n    const response = await http.get(`/books/${id}`);\r\n    //const response = await http.get('/books/1');\r\n\r\n    /* return response.data */\r\n    /* console.log(response.data.book[config.attrbiutes.variable_0]);\r\n      console.log(response.data.book[config.attrbiutes.variable_1]);*/\r\n    console.log(response.data.book);\r\n    const attrs = config.attrbiutes;\r\n    /* const mapped = {};\r\n    const obj = response.data.book;\r\n    let counter = 0;\r\n    Object.entries(obj).forEach(([key, value]) => {\r\n      if (attrs.includes(key)) {\r\n        mapped['jItem_' + counter] = value;\r\n        counter++;\r\n      }\r\n    }); */\r\n\r\n    const mapped = {};\r\n    Object.entries(response.data.book).forEach(([key, value]) => {\r\n      if (attrs.includes(key)) {\r\n        mapped[key] = value;\r\n      }\r\n    });\r\n    return [mapped];\r\n  }\r\n\r\n  create(data) {\r\n    data[config.attribiutesTest.variable_1] = data.variable_1;\r\n    data[config.attribiutesTest.variable_2] = data.variable_2;\r\n    data[config.attribiutesTest.variable_3] = data.variable_3;\r\n    data[config.attribiutesTest.variable_4] = data.variable_4;\r\n    data[config.attribiutesTest.variable_5] = data.variable_5;\r\n\r\n    return http.post('/' + config.RessourceName, data).then(result => {\r\n      return result.data[config.attribiutesTest.variable_0];\r\n    });\r\n    //return http.post(\"/books\", data);\r\n  }\r\n\r\n  async get(id) {\r\n    return http.get(`/books/${id}`);\r\n  }\r\n\r\n  update(id, data) {\r\n    return http.put(`/books/${id}`, data);\r\n  }\r\n\r\n  delete(id) {\r\n    return http.delete(`/books/${id}`);\r\n  }\r\n\r\n  deleteAll() {\r\n    return http.delete(`/books`);\r\n  }\r\n}\r\n\r\nexport default new GenericRESTDataService();\r\n"]}]}