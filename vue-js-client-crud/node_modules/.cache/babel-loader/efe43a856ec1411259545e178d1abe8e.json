{"remainingRequest":"C:\\Projects\\DA\\front_backend\\vue-js-client-crud\\node_modules\\babel-loader\\lib\\index.js!C:\\Projects\\DA\\front_backend\\vue-js-client-crud\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Projects\\DA\\front_backend\\vue-js-client-crud\\src\\services\\GenericRESTDataService.js","dependencies":[{"path":"C:\\Projects\\DA\\front_backend\\vue-js-client-crud\\src\\services\\GenericRESTDataService.js","mtime":1622555282883},{"path":"C:\\Projects\\DA\\front_backend\\vue-js-client-crud\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1622097486799},{"path":"C:\\Projects\\DA\\front_backend\\vue-js-client-crud\\node_modules\\babel-loader\\lib\\index.js","mtime":1622097486417},{"path":"C:\\Projects\\DA\\front_backend\\vue-js-client-crud\\node_modules\\eslint-loader\\index.js","mtime":1622097493014}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9zbGljZWRUb0FycmF5IGZyb20gIkM6L1Byb2plY3RzL0RBL2Zyb250X2JhY2tlbmQvdnVlLWpzLWNsaWVudC1jcnVkL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9zbGljZWRUb0FycmF5IjsKaW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIkM6L1Byb2plY3RzL0RBL2Zyb250X2JhY2tlbmQvdnVlLWpzLWNsaWVudC1jcnVkL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKaW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tICJDOi9Qcm9qZWN0cy9EQS9mcm9udF9iYWNrZW5kL3Z1ZS1qcy1jbGllbnQtY3J1ZC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY2xhc3NDYWxsQ2hlY2siOwppbXBvcnQgX2NyZWF0ZUNsYXNzIGZyb20gIkM6L1Byb2plY3RzL0RBL2Zyb250X2JhY2tlbmQvdnVlLWpzLWNsaWVudC1jcnVkL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jcmVhdGVDbGFzcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuZm9yLWVhY2guanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QuZW50cmllcy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmluY2x1ZGVzLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLmluY2x1ZGVzLmpzIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiOwovL2ltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7CmltcG9ydCBodHRwIGZyb20gJy4uL2h0dHAtY29tbW9uJzsgLy9pbXBvcnQgY29uZmlnIGZyb20gcHJvY2Vzcy5lbnYuVlVFX0FQUF9FWFRfUkVTVF9DT05GSUdfMV9kb3RzOyAvLyIuL2NvbmZpZyI7CgppbXBvcnQgY29uZmlnIGZyb20gJy4uL2NvbmZpZyc7Cgp2YXIgR2VuZXJpY1JFU1REYXRhU2VydmljZSA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoKSB7CiAgZnVuY3Rpb24gR2VuZXJpY1JFU1REYXRhU2VydmljZSgpIHsKICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBHZW5lcmljUkVTVERhdGFTZXJ2aWNlKTsKICB9CgogIF9jcmVhdGVDbGFzcyhHZW5lcmljUkVTVERhdGFTZXJ2aWNlLCBbewogICAga2V5OiAiZ2V0QWxsIiwKICAgIHZhbHVlOiBmdW5jdGlvbiAoKSB7CiAgICAgIHZhciBfZ2V0QWxsID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICAgIHZhciByZXNwb25zZTsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMjsKICAgICAgICAgICAgICAgIHJldHVybiBodHRwLmdldCgnLycgKyBjb25maWcuUmVzc291cmNlTmFtZSk7CgogICAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICAgIHJlc3BvbnNlID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5hYnJ1cHQoInJldHVybiIsIHJlc3BvbnNlLmRhdGFbY29uZmlnLlJlc3NvdXJjZU5hbWVdKTsKCiAgICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZSk7CiAgICAgIH0pKTsKCiAgICAgIGZ1bmN0aW9uIGdldEFsbCgpIHsKICAgICAgICByZXR1cm4gX2dldEFsbC5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgICB9CgogICAgICByZXR1cm4gZ2V0QWxsOwogICAgfSgpCiAgfSwgewogICAga2V5OiAiZmluZEJ5SWQiLAogICAgdmFsdWU6IGZ1bmN0aW9uICgpIHsKICAgICAgdmFyIF9maW5kQnlJZCA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIoaWQpIHsKICAgICAgICB2YXIgcmVzcG9uc2UsIGF0dHJzLCBtYXBwZWQ7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUyJChfY29udGV4dDIpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQyLnByZXYgPSBfY29udGV4dDIubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gMjsKICAgICAgICAgICAgICAgIHJldHVybiBodHRwLmdldCgiL2Jvb2tzLyIuY29uY2F0KGlkKSk7CgogICAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICAgIHJlc3BvbnNlID0gX2NvbnRleHQyLnNlbnQ7CiAgICAgICAgICAgICAgICAvL2NvbnN0IHJlc3BvbnNlID0gYXdhaXQgaHR0cC5nZXQoJy9ib29rcy8xJyk7CgogICAgICAgICAgICAgICAgLyogcmV0dXJuIHJlc3BvbnNlLmRhdGEgKi8KCiAgICAgICAgICAgICAgICAvKiBjb25zb2xlLmxvZyhyZXNwb25zZS5kYXRhLmJvb2tbY29uZmlnLmF0dHJiaXV0ZXMudmFyaWFibGVfMF0pOw0KICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2cocmVzcG9uc2UuZGF0YS5ib29rW2NvbmZpZy5hdHRyYml1dGVzLnZhcmlhYmxlXzFdKTsqLwogICAgICAgICAgICAgICAgY29uc29sZS5sb2cocmVzcG9uc2UuZGF0YS5ib29rKTsKICAgICAgICAgICAgICAgIGF0dHJzID0gY29uZmlnLmF0dHJiaXV0ZXM7CiAgICAgICAgICAgICAgICAvKiBjb25zdCBtYXBwZWQgPSB7fTsNCiAgICAgICAgICAgICAgICBjb25zdCBvYmogPSByZXNwb25zZS5kYXRhLmJvb2s7DQogICAgICAgICAgICAgICAgbGV0IGNvdW50ZXIgPSAwOw0KICAgICAgICAgICAgICAgIE9iamVjdC5lbnRyaWVzKG9iaikuZm9yRWFjaCgoW2tleSwgdmFsdWVdKSA9PiB7DQogICAgICAgICAgICAgICAgICBpZiAoYXR0cnMuaW5jbHVkZXMoa2V5KSkgew0KICAgICAgICAgICAgICAgICAgICBtYXBwZWRbJ2pJdGVtXycgKyBjb3VudGVyXSA9IHZhbHVlOw0KICAgICAgICAgICAgICAgICAgICBjb3VudGVyKys7DQogICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfSk7ICovCgogICAgICAgICAgICAgICAgbWFwcGVkID0ge307CiAgICAgICAgICAgICAgICBPYmplY3QuZW50cmllcyhyZXNwb25zZS5kYXRhLmJvb2spLmZvckVhY2goZnVuY3Rpb24gKF9yZWYpIHsKICAgICAgICAgICAgICAgICAgdmFyIF9yZWYyID0gX3NsaWNlZFRvQXJyYXkoX3JlZiwgMiksCiAgICAgICAgICAgICAgICAgICAgICBrZXkgPSBfcmVmMlswXSwKICAgICAgICAgICAgICAgICAgICAgIHZhbHVlID0gX3JlZjJbMV07CgogICAgICAgICAgICAgICAgICBpZiAoYXR0cnMuaW5jbHVkZXMoa2V5KSkgewogICAgICAgICAgICAgICAgICAgIG1hcHBlZFtrZXldID0gdmFsdWU7CiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5hYnJ1cHQoInJldHVybiIsIFttYXBwZWRdKTsKCiAgICAgICAgICAgICAgY2FzZSA4OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUyKTsKICAgICAgfSkpOwoKICAgICAgZnVuY3Rpb24gZmluZEJ5SWQoX3gpIHsKICAgICAgICByZXR1cm4gX2ZpbmRCeUlkLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICAgIH0KCiAgICAgIHJldHVybiBmaW5kQnlJZDsKICAgIH0oKQogIH0sIHsKICAgIGtleTogImNyZWF0ZSIsCiAgICB2YWx1ZTogZnVuY3Rpb24gY3JlYXRlKGRhdGEpIHsKICAgICAgZGF0YVtjb25maWcuYXR0cmJpdXRlcy52YXJpYWJsZV8xXSA9IGRhdGEudmFyaWFibGVfMTsKICAgICAgZGF0YVtjb25maWcuYXR0cmJpdXRlcy52YXJpYWJsZV8yXSA9IGRhdGEudmFyaWFibGVfMjsKICAgICAgZGF0YVtjb25maWcuYXR0cmJpdXRlcy52YXJpYWJsZV8zXSA9IGRhdGEudmFyaWFibGVfMzsKICAgICAgZGF0YVtjb25maWcuYXR0cmJpdXRlcy52YXJpYWJsZV80XSA9IGRhdGEudmFyaWFibGVfNDsKICAgICAgZGF0YVtjb25maWcuYXR0cmJpdXRlcy52YXJpYWJsZV81XSA9IGRhdGEudmFyaWFibGVfNTsKICAgICAgcmV0dXJuIGh0dHAucG9zdCgnLycgKyBjb25maWcuUmVzc291cmNlTmFtZSwgZGF0YSkudGhlbihmdW5jdGlvbiAocmVzdWx0KSB7CiAgICAgICAgcmV0dXJuIHJlc3VsdC5kYXRhW2NvbmZpZy5hdHRyYml1dGVzLnZhcmlhYmxlXzBdOwogICAgICB9KTsgLy9yZXR1cm4gaHR0cC5wb3N0KCIvYm9va3MiLCBkYXRhKTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJnZXQiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGdldChpZCkgewogICAgICByZXR1cm4gaHR0cC5nZXQoIi9ib29rcy8iLmNvbmNhdChpZCkpOwogICAgfQogIH0sIHsKICAgIGtleTogInVwZGF0ZSIsCiAgICB2YWx1ZTogZnVuY3Rpb24gdXBkYXRlKGlkLCBkYXRhKSB7CiAgICAgIHJldHVybiBodHRwLnB1dCgiL2Jvb2tzLyIuY29uY2F0KGlkKSwgZGF0YSk7CiAgICB9CiAgfSwgewogICAga2V5OiAiZGVsZXRlIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBfZGVsZXRlKGlkKSB7CiAgICAgIHJldHVybiBodHRwLmRlbGV0ZSgiL2Jvb2tzLyIuY29uY2F0KGlkKSk7CiAgICB9CiAgfSwgewogICAga2V5OiAiZGVsZXRlQWxsIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBkZWxldGVBbGwoKSB7CiAgICAgIHJldHVybiBodHRwLmRlbGV0ZSgiL2Jvb2tzIik7CiAgICB9CiAgICAvKiBhc3luYyBmaW5kQnlJZCgpIHsNCiAgICAgIC8vcmV0dXJuIGh0dHAuZ2V0KGAvYm9va3MvJHtpZH1gKS50aGVuKHJlc3VsdCA9PiB7DQogICAgICAgIC8vY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBodHRwLmdldChgL2Jvb2tzLyR7aWR9YCk7DQogICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGh0dHAuZ2V0KCIvYm9va3MvMSIpOw0KICAgICAgICByZXR1cm4gcmVzcG9uc2UuZGF0YVtjb25maWcuUmVzc291cmNlTmFtZV0ubWFwKG9iaiA9PiB7DQogICAgICAgIHJldHVybiB7DQogICAgICAgICAgakl0ZW1fMDogb2JqW2NvbmZpZy5hdHRyYml1dGVzLnZhcmlhYmxlXzBdLA0KICAgICAgICAgIGpJdGVtXzE6IG9ialtjb25maWcuYXR0cmJpdXRlcy52YXJpYWJsZV8xXSwNCiAgICAgICAgICBqSXRlbV8yOiBvYmpbY29uZmlnLmF0dHJiaXV0ZXMudmFyaWFibGVfMl0sDQogICAgICAgICAgakl0ZW1fMzogb2JqW2NvbmZpZy5hdHRyYml1dGVzLnZhcmlhYmxlXzNdLA0KICAgICAgICAgIGpJdGVtXzQ6IG9ialtjb25maWcuYXR0cmJpdXRlcy52YXJpYWJsZV80XSwNCiAgICAgICAgICBqSXRlbV81OiBvYmpbY29uZmlnLmF0dHJiaXV0ZXMudmFyaWFibGVfNV0NCiAgICAgICAgfTsNCiAgICAgIH0pOw0KICAgIH0gKi8KCiAgICAvKiByZXR1cm4gaHR0cC5nZXQoYC9ib29rcz90aXRsZT0ke3RpdGxlfWApLnRoZW4ocmVzdWx0ID0+IHsNCiAgICAgICAgcmV0dXJuIHJlc3VsdC5kYXRhOyAvL1tjb25maWcuUmVzc291cmNlTmFtZV0NCiAgICAgIH0pOyAgKi8KICAgIC8vcmV0dXJuIGh0dHAuZ2V0KGAvYm9va3MvJHtpZH1gKTsKCiAgICAvKiAgIA0KICAgIGZjdWsoKXsNCiAgICAgIHJldHVybiBodHRwLmdldCgiL3Bvc3RzIik7DQogICAgfSAqLwoKICB9XSk7CgogIHJldHVybiBHZW5lcmljUkVTVERhdGFTZXJ2aWNlOwp9KCk7CgpleHBvcnQgZGVmYXVsdCBuZXcgR2VuZXJpY1JFU1REYXRhU2VydmljZSgpOw=="},{"version":3,"sources":["C:/Projects/DA/front_backend/vue-js-client-crud/src/services/GenericRESTDataService.js"],"names":["http","config","GenericRESTDataService","get","RessourceName","response","data","id","console","log","book","attrs","attrbiutes","mapped","Object","entries","forEach","key","value","includes","variable_1","variable_2","variable_3","variable_4","variable_5","post","then","result","variable_0","put","delete"],"mappings":"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","sourcesContent":["//import axios from 'axios';\r\nimport http from '../http-common';\r\n//import config from process.env.VUE_APP_EXT_REST_CONFIG_1_dots; //\"./config\";\r\nimport config from '../config';\r\n\r\nclass GenericRESTDataService {\r\n  async getAll() {\r\n    const response = await http.get('/' + config.RessourceName);\r\n\r\n    return response.data[config.RessourceName];\r\n  }\r\n\r\n  async findById(id) {\r\n    //TODO:  maket the function \"Search by ID\" work.\r\n    const response = await http.get(`/books/${id}`);\r\n    //const response = await http.get('/books/1');\r\n\r\n    /* return response.data */\r\n    /* console.log(response.data.book[config.attrbiutes.variable_0]);\r\n      console.log(response.data.book[config.attrbiutes.variable_1]);*/\r\n    console.log(response.data.book);\r\n    const attrs = config.attrbiutes;\r\n    /* const mapped = {};\r\n    const obj = response.data.book;\r\n    let counter = 0;\r\n    Object.entries(obj).forEach(([key, value]) => {\r\n      if (attrs.includes(key)) {\r\n        mapped['jItem_' + counter] = value;\r\n        counter++;\r\n      }\r\n    }); */\r\n\r\n    const mapped = {};\r\n    Object.entries(response.data.book).forEach(([key, value]) => {\r\n      if (attrs.includes(key)) {\r\n        mapped[key] = value;\r\n      }\r\n    });\r\n    return [mapped];\r\n  }\r\n\r\n  create(data) {\r\n    data[config.attrbiutes.variable_1] = data.variable_1;\r\n    data[config.attrbiutes.variable_2] = data.variable_2;\r\n    data[config.attrbiutes.variable_3] = data.variable_3;\r\n    data[config.attrbiutes.variable_4] = data.variable_4;\r\n    data[config.attrbiutes.variable_5] = data.variable_5;\r\n\r\n    return http.post('/' + config.RessourceName, data).then(result => {\r\n      return result.data[config.attrbiutes.variable_0];\r\n    });\r\n    //return http.post(\"/books\", data);\r\n  }\r\n\r\n  get(id) {\r\n    return http.get(`/books/${id}`);\r\n  }\r\n\r\n  update(id, data) {\r\n    return http.put(`/books/${id}`, data);\r\n  }\r\n\r\n  delete(id) {\r\n    return http.delete(`/books/${id}`);\r\n  }\r\n\r\n  deleteAll() {\r\n    return http.delete(`/books`);\r\n  }\r\n\r\n  /* async findById() {\r\n    //return http.get(`/books/${id}`).then(result => {\r\n\r\n    //const response = await http.get(`/books/${id}`);\r\n    const response = await http.get(\"/books/1\");\r\n\r\n    return response.data[config.RessourceName].map(obj => {\r\n      return {\r\n        jItem_0: obj[config.attrbiutes.variable_0],\r\n        jItem_1: obj[config.attrbiutes.variable_1],\r\n        jItem_2: obj[config.attrbiutes.variable_2],\r\n        jItem_3: obj[config.attrbiutes.variable_3],\r\n        jItem_4: obj[config.attrbiutes.variable_4],\r\n        jItem_5: obj[config.attrbiutes.variable_5]\r\n      };\r\n    });\r\n  } */\r\n\r\n  /* return http.get(`/books?title=${title}`).then(result => {\r\n      return result.data; //[config.RessourceName]\r\n    });  */\r\n  //return http.get(`/books/${id}`);\r\n  /*   \r\n  fcuk(){\r\n    return http.get(\"/posts\");\r\n  } */\r\n}\r\n\r\nexport default new GenericRESTDataService();\r\n"]}]}